###################################################################################
# списки

names = ['Наталья', 'Алексей', 'Сергей', 'Марина']
heights = [161, 170, 167, 165]

names_and_heights = list(zip(names, heights))

print(names_and_heights)

names+=['Екатерина']
names.append('Екатерина')
print(names)

a = list(range(1, 10, 2))
print(a)

###################################################################################
# циклы

number_list = [1, 4, 5, 7, 8]
result = []

# for number in number_list:
#     result.append(number * 2)
#
# print(result)


# Через цикл while
num = 0
while num != len(number_list):
    result.append(number_list[num] * 2)
    num += 1

print(result)


###################################################################################
# функции

def square(num):
    return num ** 2


a = square(2)
print(a)

###################################################################################
# 4. Компания реализует оказание услуг в области ногтевого сервиса.
# Вас просят, как аналитика данных, рассчитать некоторую статистику по одной неделе.
# Имеются 3 списка, сгенерированных в результате работы в эту неделю:
# Первый список характеризует виды маникюра, которые делает данный салон:
# Nail_style=[“Шеллак”, “Френч”, “Обычный лак”, “Гель-лак”, “Акрил”]
# Второй список характеризует цены на эти услуги:
# Price = [2000, 1500, 1000, 3000, 3500, 3200]
# Третий список показывает, сколько раз за неделю заказывали тот или иной вид маникюра соответственно
# Week = [4, 5, 4, 8, 6]
# Хозяйка салона просит вас написать приложение, которое выводит в консоль:
# Среднее значение посещений салона
# Общее количество посещений салона
# Выручку салона
# Выручку по видам маникюра
# Среднюю выручку в день по видам маникюра. Полученные значения записать в файл CSV.

import csv

Nail_style = ['Шеллак', 'Френч', 'Обычный лак', 'Гель-лак', 'Акрил']
Price = [2000, 1500, 1000, 3000, 3500]
Week = [4, 5, 4, 8, 6]


def statistic(product, price, week):
    mean_day = sum(week) / 7  # Среднее значение посещений салона за 7 дней
    mean_day = round(mean_day, 2)  # Знаки после запятой
    visits = sum(week)  # Общее количество посещений салона

    revenue = []  # Выручку салона
    for index in range(len(price)):
        revenue.append(week[index] * price[index])

    total_rev = sum(revenue)  # Выручку по видам маникюра
    mean_rev = total_rev / 7  # Среднюю выручку в день по видам маникюра
    mean_rev = round(mean_rev, 2)  # Знаки после запятой

    with open('stats.csv', mode='w', encoding='UTF-8') as w_file:
        file_writer = csv.writer(w_file, delimiter=',', lineterminator='\n')
        file_writer.writerow(
            ['Среднее значение посещений салона', 'Общее количество посещений салона', 'Выручку салона',
             'Среднюю выручку в день по видам маникюра'])
        file_writer.writerow([mean_day, visits, total_rev, mean_rev])

    print(f'''За 7 дней:
    Среднее значение посещений салона: {mean_day}
    Общее количество посещений салона: {visits}
    Выручка салона: {total_rev}
    Средняя выручка в день по видам маникюра: {mean_rev}
    ''')

    return mean_day, visits, revenue, total_rev, mean_rev


print(statistic(Nail_style, Price, Week))

###################################################################################
# 4. По данным Росстата численность населения по годам составила:
# 2015 год - 146405999 человек
# 2016 год - 146674541 человек
# 2017 год - 146842401 человек
# 2018 год - 146830575 человек
# 2019 год - 146764655 человек
# 2020 год - 146459803 человек
# Создать csv файл, который содержит данные о численности населения.
# Разработать программу, которая на основе данных из файла будет
# рассчитывать и выводить в консоль следующие показатели:
# •среднегодовое изменение численности населения в течение указанного
# периода времени;  (среднее)


###################################################################################
#
d = ['Дорогой друг', 'всем приветик', 'ваша подписка', '@', '#']  # список содержащий признаки нежелательного письма
text = ['Good moning!', 'Дорогой друг', 'всем приветик', 'ваша подписка', 'Good moning!@',
        '#Good moning!', 'Hi!', 'Hello!']  # все входящие письма для проверки

new_mail = []  # пустой список для входящих писем
spam_mail = []  # пустой список для спама


def file(text, d):  # text-список со всеми входящими письмами, d-список содержащий признаки нежелательного письма
    if len(text) <= 200:
        for item in d:
            if item in text:
                return 'Письмо в спам'
    return 'Получено'


print(file('Дорогой друг, приветик', d))
