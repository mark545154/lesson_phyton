####################################################################
# - - - - - - - - - Работа со списками, кортежами - - - - - - - - #
# Упражнение 1. Найти минимальное число в списке и вывести в консоль. Визуализировать
# решение и реализовать на языке программирования.

# s = (input('Введите числа через запятую: ')).split(',')
#
#
# def minimum(s):
#     m = float(s[0])
#     index = 0
#     for i in range(1, len(s)):
#         if float(s[i]) < m:
#             m = s[i]
#             index = i
#     return m, index
#
#
# print(minimum(s))


# Код Лейлы Ибрагимовны
# s = (input("Введите числа через запятую: ")).split(',')
#
#
# def minim(s):
#     m = float(s[0])
#     index = 0
#     for i in range(1, len(s)):
#         if float(s[i]) < m:
#             m = s[i]
#             index = i
#     return m, index
#
#
# print(minim(s))

####################################################################
# Упражнение 2 Вводится натуральное число. Найти сумму четных цифр, входящих в его
# состав. Визуализировать решение и реализовать на языке программирования

# # n = (input('Введите числа: '))
#
# n = 156489
# n1 = str(n)
#
# def sum_od(n):
#     s = 0
#     for i in n:
#         if int(i) % 2 == 0:
#             s += int(i)
#     return s
# print(sum_od(n1))

############################## Ещё вариант через цикл while
# n = 156489
#
# summ = 0
# while n != 0:
#     if (n % 10) % 2 == 0:
#         summ += n % 10
#     n = n // 10
# print(summ)

############################## Результаты Лейлы Ибрагимовны
# # n = input("Введите число")
# n = 247895
# n1 = str(n)
#
#
# # работаем со строкой
# def sum_od(n_string):
#     s = 0
#     for i in n_string:
#         if int(i) % 2 == 0:
#             s += int(i)
#     return s
#
#
# print(sum_od(n1))  # при вызове передаем строку
#
#
# def sum_od2(n_string):
#     # list_n = [ int(i) for i in n_string if int(i)%2 == 0 ]
#     # return sum (list_n)
#     return sum([int(i) for i in n_string if int(i) % 2 == 0])
#
#
# print(sum_od2(n1))  # при вызове передаем строку
#
#
# # работаем с числом
# def sum_od1(n):
#     summ = 0
#     while n != 0:
#         if (n % 10) % 2 == 0:
#             summ += n % 10
#         n = n // 10
#     return summ
#
#
# print(sum_od1(n))  # при вызове передаем число

####################################################################
# Упражнение 3. Найти среднее значение в списке. Визуализировать решение и
# реализовать на языке программирования.

# list1 = [2, 5, 8, 4, 88]
#
# def aver(list1):
#     s = 0
#     k = 0
#     for i in list1:
#         s += i
#         k += 1
#     if k != 0:
#         return s / k
#     else:
#         return 'Деление на ноль!'
#
# def aver2(list1):
#     if len(list1) != 0:
#         return sum(list1) / len(list1)
#     else:
#         return 'Деление на ноль!'
#
# print(aver(list1))
# print(aver2(list1))

####################################################################
# Упражнение 4. В списке найти минимальный и максимальный элементы. Вычислить их
# разность.
# Например, дан список [3, 5, 9, 4, 2, 6]. Максимальным числом является 9, минимальным
# является 2. Разность составляет 9-2=7

# list1 = [3, 5, 9, 4, 2, 6]
#
#
# def razr(list1):
#     mini = list1[0]
#     maxi = list1[0]
#     for num in list1:
#         if num < mini:
#             mini = num
#         elif num > maxi:
#             maxi = num
#     return maxi - mini
#
#
# print(razr(list1))

####################################################################
# Упражнение 5. Найти сумму положительных элементов массива. Визуализировать
# решение и реализовать на языке программирования.

# f = [3, 5, 9, 4, 2, 6]
#
#
# def summ(f):
#     s = 0
#     for num in f:
#         if num > 0:
#             s += num
#     return s
#
#
# def summ1(f):
#     s = 0
#     for i in range(len(f)):
#         if f[i] > 0:
#             s += f[i]
#     return s
#
#
# print(summ(f))
# print(summ1(f))

####################################################################
# Упражнение 6. Найти номер и значение первого положительного элемента массива.
# Визуализировать решение и реализовать на языке программирования.

# f = [-3, -5, 9, 4, 2, -6]
#
#
# def positive_num(f):
#     for i in range(len(f)):
#         if f[i] > 0:
#             return f[i], i
#
# pos_n, index = positive_num(f)
#
# print(f'Первый положительный элемент {pos_n} с индексом {index}')

####################################################################
# Упражнение 7. Из двух чисел с разной четностью вывести на экран нечетное число.
# Визуализировать решение и реализовать на языке программирования

def num_odd(num1, num2):
    if num1 % 2 == 0:
        return 'Число будет нечётное: ', num2
    else:
        return 'Число будет чётное: ', num1


print(num_odd(int(input('Введите первое число: ')), int(input('Введите второе число: '))))

# a = 11
#
# b = 8
#
# if a % 2 == 0:
#
#     print(b)
#
# else:
#
#     print(a)


####################################################################
#
